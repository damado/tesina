[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/uml2/3.0.0/UML', 'http://cm/1.0')]
[import org::lifia::collaborativeTool::common::generate_app/]
[import org::lifia::collaborativeTool::common::generate_component/]
[import org::lifia::collaborativeTool::utils::get_workspace_in_collaborative_activity /]
[import org::lifia::collaborativeTool::files::generate_workspace_view/]
[import org::lifia::collaborativeTool::files::generate_workspace_style /]
[import org::lifia::collaborativeTool::files::generate_collaborative_activity_style /]
[import org::lifia::collaborativeTool::files::generate_collaborative_activity_view /]
[import org::lifia::collaborativeTool::common::generate_process /]

[template public generateAppComponent(aCollaborativeModel : CollaborativeModel)]
[comment @main /]
[generateApp(aCollaborativeModel)/]

[for (aCollaborativeElement: CollaborativeElement | aCollaborativeModel.ownedMember->filter(CollaborativeElement))]

	[let aWorkspace : Workspace = aCollaborativeElement]
		[generateComponent(aWorkspace, aCollaborativeModel)/]
		[generateWorkspaceView(aCollaborativeModel, aWorkspace)/]
		[generateWorkspaceStyle(aWorkspace)/]
	[/let]

[comment]	[let aCollaborativeActivity : CollaborativeActivity = aCollaborativeElement]
		[let aWorkspace : Workspace = getWorkspaceInCollaborativeActivity(aCollaborativeActivity)]
			[generateWorkspaceView(aCollaborativeModel, aWorkspace, aCollaborativeActivity)/]
			[generateWorkspaceStyle(aWorkspace)/]
			[generateComponent(aWorkspace, aCollaborativeModel)/]
		[/let]
		[generateComponent(aCollaborativeActivity, aCollaborativeModel)/]
	[/let][/comment]

[/for]

[for (aCollaborativeProcess: CollaborativeProcess | aCollaborativeModel.ownedMember->filter(CollaborativeProcess))]
[comment]	[for (activity : Activity | aCollaborativeProcess.ownedMember->filter(Activity))]
		[let aCollaborativeActivity : CollaborativeActivity = activity.ownedNode->filter(InitialNode).outgoing.target.eGet('collaborativeActivity').oclAsType(CollaborativeActivity)->asOrderedSet()->first()]
			[let aWorkspace : Workspace = getWorkspaceInCollaborativeActivity(aCollaborativeActivity)]
				[generateWorkspaceView(aCollaborativeModel, aWorkspace, aCollaborativeActivity)/]
				[generateWorkspaceStyle(aWorkspace)/]
				[generateComponent(aWorkspace, aCollaborativeModel)/]
			[/let]
			[generateCollaborativeActivityStyle(aCollaborativeActivity)/]
			[generateComponent(aCollaborativeActivity, aCollaborativeModel)/]
[comment]			[for (aCollaborativeActivityNode: OclAny | activity.ownedNode->filter(CollaborativeProcessEdge))]
[comment]				[if (aCollaborativeActivityNode.collaborativeActivity = aCollaborativeActivity)][/comment]
					[generateCollaborativeActivityView(aCollaborativeModel, aCollaborativeActivity, aCollaborativeActivityNode)/]
[comment]				[/if][/comment]
			[/for][/comment]
		[/let]
		[for (aActivityEdge : CollaborativeProcessEdge | activity.ownedNode->filter(CollaborativeActivityNode).outgoing.oclAsType(CollaborativeProcessEdge))]
			[for (aActivityNode : ActivityNode | aActivityEdge.target->filter(CollaborativeActivityNode))]
				[let var : CollaborativeActivity = aActivityNode.eGet('collaborativeActivity').oclAsType(CollaborativeActivity)->asOrderedSet()->first()]
					[generateCollaborativeActivityView(aCollaborativeModel, var, aActivityEdge.roleElementOperation.getName())/]123
				[/let]
			[/for]
		[/for]

		
	[/for][/comment]
	[generateProcess(aCollaborativeModel, aCollaborativeProcess)/]
[/for]

[/template]

